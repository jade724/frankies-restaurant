{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Navbar=()=>{const isLoggedIn=!!localStorage.getItem('token');// Check if user is logged in\nconst[userName,setUserName]=useState('');// Retrieve user name from localStorage\nuseEffect(()=>{const storedUserName=localStorage.getItem('userName');if(storedUserName){setUserName(storedUserName);// Set from localStorage if present\n}else if(isLoggedIn){fetchUserName();// Fetch from API if not in localStorage\n}},[isLoggedIn]);// If the user is logged in and there's no userName, we should fetch it from the server.\nconst fetchUserName=async()=>{const token=localStorage.getItem('token');if(token){try{const response=await fetch('/api/user',{headers:{Authorization:`Bearer ${token}`}});if(!response.ok){throw new Error('Failed to fetch user data');}const data=await response.json();setUserName(data.name);// Set the userName from the response\nlocalStorage.setItem('userName',data.name);// Store it in localStorage\n}catch(error){console.error(error.message);}}};// Call fetchUserName when the component mounts if the user is logged in\nreturn/*#__PURE__*/_jsx(\"nav\",{className:\"navbar navbar-expand-lg navbar-light bg-light\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Link,{className:\"navbar-brand\",to:\"/\",children:/*#__PURE__*/_jsx(\"img\",{src:\"/assets/logo.png\",alt:\"Frankie's Logo\",height:\"50\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"navbar-toggler\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#navbarNav\",children:/*#__PURE__*/_jsx(\"span\",{className:\"navbar-toggler-icon\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"collapse navbar-collapse\",id:\"navbarNav\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"navbar-nav ms-auto\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(Link,{className:\"nav-link\",to:\"/\",children:\"Home\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(Link,{className:\"nav-link\",to:\"/menu\",children:\"Menu\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(Link,{className:\"nav-link\",to:\"/login\",children:\"Login\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(Link,{className:\"nav-link\",to:\"/booking\",children:\"Booking\"})}),isLoggedIn&&userName&&/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsxs(Link,{className:\"nav-link account-btn\",to:\"/account\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-person-circle me-2\",style:{fontSize:'1.5rem'}}),\" \",/*#__PURE__*/_jsx(\"span\",{children:`Hello, ${userName}`}),\" \"]})}),!isLoggedIn&&/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(Link,{className:\"nav-link\",to:\"/signup\",children:\"Signup\"})})]})})]})});};export default Navbar;","map":{"version":3,"names":["React","useState","useEffect","Link","jsx","_jsx","jsxs","_jsxs","Navbar","isLoggedIn","localStorage","getItem","userName","setUserName","storedUserName","fetchUserName","token","response","fetch","headers","Authorization","ok","Error","data","json","name","setItem","error","console","message","className","children","to","src","alt","height","type","id","style","fontSize"],"sources":["/Users/jjom/Documents/frankies_restaurant/src/components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  const isLoggedIn = !!localStorage.getItem('token'); // Check if user is logged in\n  const [userName, setUserName] = useState('');  // Retrieve user name from localStorage\n\n  useEffect(() => {\n    const storedUserName = localStorage.getItem('userName');\n    if (storedUserName) {\n      setUserName(storedUserName); // Set from localStorage if present\n    } else if (isLoggedIn) {\n      fetchUserName(); // Fetch from API if not in localStorage\n    }\n  }, [isLoggedIn]);\n\n  // If the user is logged in and there's no userName, we should fetch it from the server.\n  const fetchUserName = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const response = await fetch('/api/user', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch user data');\n        }\n\n        const data = await response.json();\n        setUserName(data.name); // Set the userName from the response\n        localStorage.setItem('userName', data.name); // Store it in localStorage\n      } catch (error) {\n        console.error(error.message);\n      }\n    }\n  };\n\n  // Call fetchUserName when the component mounts if the user is logged in\n  \n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"container\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          <img src=\"/assets/logo.png\" alt=\"Frankie's Logo\" height=\"50\" />\n        </Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav ms-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/\">Home</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/menu\">Menu</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/login\">Login</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/booking\">Booking</Link>\n            </li>\n\n            {/* Account Button for Logged-in Users */}\n            {isLoggedIn && userName && (\n              <li className=\"nav-item\">\n                <Link className=\"nav-link account-btn\" to=\"/account\">\n                <i className=\"bi bi-person-circle me-2\" style={{ fontSize: '1.5rem' }}></i> {/* Icon */}\n                  <span>{`Hello, ${userName}`}</span> {/* Greet the user */}\n                </Link>\n              </li>\n            )}\n            {!isLoggedIn && (\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/signup\">Signup</Link>\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}