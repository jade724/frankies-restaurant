{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Account=()=>{const[formData,setFormData]=useState({name:'',email:'',password:'',confirmPassword:''});const[message,setMessage]=useState('');const[successMessage,setSuccessMessage]=useState('');useEffect(()=>{const fetchUserData=async()=>{const token=localStorage.getItem('token');if(!token){setMessage('You must be logged in to access this page.');return;}try{const response=await fetch('/api/account',{headers:{Authorization:`Bearer ${token}`}});if(!response.ok){throw new Error('Failed to fetch account details.');}const data=await response.json();setFormData({name:data.name,email:data.email});}catch(error){setMessage(error.message);}};fetchUserData();},[]);const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const handleUpdate=async e=>{e.preventDefault();setMessage('');setSuccessMessage('');if(formData.password&&formData.password!==formData.confirmPassword){setMessage('Passwords do not match.');return;}const token=localStorage.getItem('token');if(!token){setMessage('You must be logged in to update your account.');return;}try{const response=await fetch('/api/account',{method:'PUT',headers:{'Content-Type':'application/json',Authorization:`Bearer ${token}`},body:JSON.stringify(formData)});if(!response.ok){throw new Error('Failed to update account.');}setSuccessMessage('Account updated successfully!');}catch(error){setMessage(error.message);}};const handleDelete=async()=>{const token=localStorage.getItem('token');if(!token){setMessage('You must be logged in to delete your account.');return;}const confirmed=window.confirm('Are you sure you want to delete your account? This action cannot be undone.');if(!confirmed)return;try{const response=await fetch('/api/account',{method:'DELETE',headers:{Authorization:`Bearer ${token}`}});if(!response.ok){throw new Error('Failed to delete account.');}localStorage.removeItem('token');window.location.href='/';}catch(error){setMessage(error.message);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"account-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"My Account\"}),message&&/*#__PURE__*/_jsx(\"p\",{children:message}),successMessage&&/*#__PURE__*/_jsx(\"p\",{children:successMessage}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleUpdate,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:formData.name,onChange:handleChange,placeholder:\"Name\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,placeholder:\"Email\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange,placeholder:\"New Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirmPassword\",value:formData.confirmPassword,onChange:handleChange,placeholder:\"Confirm New Password\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Update\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDelete,children:\"Delete Account\"})]});};export default Account;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Account","formData","setFormData","name","email","password","confirmPassword","message","setMessage","successMessage","setSuccessMessage","fetchUserData","token","localStorage","getItem","response","fetch","headers","Authorization","ok","Error","data","json","error","handleChange","e","target","value","handleUpdate","preventDefault","method","body","JSON","stringify","handleDelete","confirmed","window","confirm","removeItem","location","href","className","children","onSubmit","type","onChange","placeholder","required","onClick"],"sources":["/Users/jjom/Documents/frankies_restaurant/src/components/Account.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Account = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [message, setMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  useEffect(() => {\n        const fetchUserData = async () => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            setMessage('You must be logged in to access this page.');\n            return;\n        }\n\n        try {\n            const response = await fetch('/api/account', {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n            });\n\n            if (!response.ok) {\n            throw new Error('Failed to fetch account details.');\n            }\n\n            const data = await response.json();\n            setFormData({ name: data.name, email: data.email });\n        } catch (error) {\n            setMessage(error.message);\n        }\n        };\n\n\n    fetchUserData();\n    }, []);\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n    setMessage('');\n    setSuccessMessage('');\n\n    if (formData.password && formData.password !== formData.confirmPassword) {\n        setMessage('Passwords do not match.');\n        return;\n      }\n  \n      const token = localStorage.getItem('token');\n      if (!token) {\n        setMessage('You must be logged in to update your account.');\n        return;\n      }\n  \n      try {\n        const response = await fetch('/api/account', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify(formData),\n        });\n  \n        if (!response.ok) {\n          throw new Error('Failed to update account.');\n        }\n  \n\n        setSuccessMessage('Account updated successfully!');\n        } catch (error) {\n        setMessage(error.message);\n        }\n  };\n\n  const handleDelete = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setMessage('You must be logged in to delete your account.');\n      return;\n    }\n\n    const confirmed = window.confirm('Are you sure you want to delete your account? This action cannot be undone.');\n    if (!confirmed) return;\n\n    try {\n      const response = await fetch('/api/account', {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete account.');\n      }\n\n      localStorage.removeItem('token');\n      window.location.href = '/';\n    } catch (error) {\n      setMessage(error.message);\n    }\n  };\n\n\n  return (\n    <div className=\"account-page\">\n      <h1>My Account</h1>\n      {message && <p>{message}</p>}\n      {successMessage && <p>{successMessage}</p>}\n      <form onSubmit={handleUpdate}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          placeholder=\"Name\"\n          required\n        />\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          placeholder=\"Email\"\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={formData.password}\n          onChange={handleChange}\n          placeholder=\"New Password\"\n        />\n        <input\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={formData.confirmPassword}\n          onChange={handleChange}\n          placeholder=\"Confirm New Password\"\n        />\n        <button type=\"submit\">Update</button>\n      </form>\n      <button onClick={handleDelete}>Delete Account</button>\n    </div>\n  );\n};\n\nexport default Account;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,CACvCS,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EAAE,CACZC,eAAe,CAAE,EACnB,CAAC,CAAC,CACF,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACe,cAAc,CAAEC,iBAAiB,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAExDC,SAAS,CAAC,IAAM,CACV,KAAM,CAAAgB,aAAa,CAAG,KAAAA,CAAA,GAAY,CAClC,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAI,CAACF,KAAK,CAAE,CACRJ,UAAU,CAAC,4CAA4C,CAAC,CACxD,OACJ,CAEA,GAAI,CACA,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,cAAc,CAAE,CAC7CC,OAAO,CAAE,CACLC,aAAa,CAAE,UAAUN,KAAK,EAClC,CACA,CAAC,CAAC,CAEF,GAAI,CAACG,QAAQ,CAACI,EAAE,CAAE,CAClB,KAAM,IAAI,CAAAC,KAAK,CAAC,kCAAkC,CAAC,CACnD,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClCpB,WAAW,CAAC,CAAEC,IAAI,CAAEkB,IAAI,CAAClB,IAAI,CAAEC,KAAK,CAAEiB,IAAI,CAACjB,KAAM,CAAC,CAAC,CACvD,CAAE,MAAOmB,KAAK,CAAE,CACZf,UAAU,CAACe,KAAK,CAAChB,OAAO,CAAC,CAC7B,CACA,CAAC,CAGLI,aAAa,CAAC,CAAC,CACf,CAAC,CAAE,EAAE,CAAC,CAER,KAAM,CAAAa,YAAY,CAAIC,CAAC,EAAK,CAC1BvB,WAAW,CAAC,CACV,GAAGD,QAAQ,CACX,CAACwB,CAAC,CAACC,MAAM,CAACvB,IAAI,EAAGsB,CAAC,CAACC,MAAM,CAACC,KAC5B,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAH,CAAC,EAAK,CAChCA,CAAC,CAACI,cAAc,CAAC,CAAC,CAClBrB,UAAU,CAAC,EAAE,CAAC,CACdE,iBAAiB,CAAC,EAAE,CAAC,CAErB,GAAIT,QAAQ,CAACI,QAAQ,EAAIJ,QAAQ,CAACI,QAAQ,GAAKJ,QAAQ,CAACK,eAAe,CAAE,CACrEE,UAAU,CAAC,yBAAyB,CAAC,CACrC,OACF,CAEA,KAAM,CAAAI,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAI,CAACF,KAAK,CAAE,CACVJ,UAAU,CAAC,+CAA+C,CAAC,CAC3D,OACF,CAEA,GAAI,CACF,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,cAAc,CAAE,CAC3Cc,MAAM,CAAE,KAAK,CACbb,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCC,aAAa,CAAE,UAAUN,KAAK,EAChC,CAAC,CACDmB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAChC,QAAQ,CAC/B,CAAC,CAAC,CAEF,GAAI,CAACc,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,2BAA2B,CAAC,CAC9C,CAGAV,iBAAiB,CAAC,+BAA+B,CAAC,CAClD,CAAE,MAAOa,KAAK,CAAE,CAChBf,UAAU,CAACe,KAAK,CAAChB,OAAO,CAAC,CACzB,CACN,CAAC,CAED,KAAM,CAAA2B,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,KAAM,CAAAtB,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAI,CAACF,KAAK,CAAE,CACVJ,UAAU,CAAC,+CAA+C,CAAC,CAC3D,OACF,CAEA,KAAM,CAAA2B,SAAS,CAAGC,MAAM,CAACC,OAAO,CAAC,6EAA6E,CAAC,CAC/G,GAAI,CAACF,SAAS,CAAE,OAEhB,GAAI,CACF,KAAM,CAAApB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,cAAc,CAAE,CAC3Cc,MAAM,CAAE,QAAQ,CAChBb,OAAO,CAAE,CACPC,aAAa,CAAE,UAAUN,KAAK,EAChC,CACF,CAAC,CAAC,CAEF,GAAI,CAACG,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,2BAA2B,CAAC,CAC9C,CAEAP,YAAY,CAACyB,UAAU,CAAC,OAAO,CAAC,CAChCF,MAAM,CAACG,QAAQ,CAACC,IAAI,CAAG,GAAG,CAC5B,CAAE,MAAOjB,KAAK,CAAE,CACdf,UAAU,CAACe,KAAK,CAAChB,OAAO,CAAC,CAC3B,CACF,CAAC,CAGD,mBACER,KAAA,QAAK0C,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B7C,IAAA,OAAA6C,QAAA,CAAI,YAAU,CAAI,CAAC,CAClBnC,OAAO,eAAIV,IAAA,MAAA6C,QAAA,CAAInC,OAAO,CAAI,CAAC,CAC3BE,cAAc,eAAIZ,IAAA,MAAA6C,QAAA,CAAIjC,cAAc,CAAI,CAAC,cAC1CV,KAAA,SAAM4C,QAAQ,CAAEf,YAAa,CAAAc,QAAA,eAC3B7C,IAAA,UACE+C,IAAI,CAAC,MAAM,CACXzC,IAAI,CAAC,MAAM,CACXwB,KAAK,CAAE1B,QAAQ,CAACE,IAAK,CACrB0C,QAAQ,CAAErB,YAAa,CACvBsB,WAAW,CAAC,MAAM,CAClBC,QAAQ,MACT,CAAC,cACFlD,IAAA,UACE+C,IAAI,CAAC,OAAO,CACZzC,IAAI,CAAC,OAAO,CACZwB,KAAK,CAAE1B,QAAQ,CAACG,KAAM,CACtByC,QAAQ,CAAErB,YAAa,CACvBsB,WAAW,CAAC,OAAO,CACnBC,QAAQ,MACT,CAAC,cACFlD,IAAA,UACE+C,IAAI,CAAC,UAAU,CACfzC,IAAI,CAAC,UAAU,CACfwB,KAAK,CAAE1B,QAAQ,CAACI,QAAS,CACzBwC,QAAQ,CAAErB,YAAa,CACvBsB,WAAW,CAAC,cAAc,CAC3B,CAAC,cACFjD,IAAA,UACE+C,IAAI,CAAC,UAAU,CACfzC,IAAI,CAAC,iBAAiB,CACtBwB,KAAK,CAAE1B,QAAQ,CAACK,eAAgB,CAChCuC,QAAQ,CAAErB,YAAa,CACvBsB,WAAW,CAAC,sBAAsB,CACnC,CAAC,cACFjD,IAAA,WAAQ+C,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,QAAM,CAAQ,CAAC,EACjC,CAAC,cACP7C,IAAA,WAAQmD,OAAO,CAAEd,YAAa,CAAAQ,QAAA,CAAC,gBAAc,CAAQ,CAAC,EACnD,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1C,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}