{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Signup=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[message,setMessage]=useState('');const handleSubmit=async e=>{e.preventDefault();setMessage('');if(!email||!password||!confirmPassword){setMessage('All fields are required.');return;}if(password!==confirmPassword){setMessage('Passwords do not match.');return;}try{const response=await fetch('/api/signup',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password,confirmPassword})});const result=await response.json();if(response.ok){setMessage('Account created successfully!');}else{setMessage(result.message||'Error occurred.');}}catch(err){setMessage('An unexpected error occurred.');}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true}),message&&/*#__PURE__*/_jsx(\"p\",{children:message}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Sign Up\"})]});};export default Signup;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Signup","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","err","onSubmit","children","type","value","onChange","target","required"],"sources":["/Users/jjom/Documents/frankies_restaurant/src/components/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Signup = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    setMessage('');\n\n    if (!email || !password || !confirmPassword) {\n      setMessage('All fields are required.');\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match.');\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password, confirmPassword }),\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        setMessage('Account created successfully!');\n      } else {\n        setMessage(result.message || 'Error occurred.');\n      }\n    } catch (err) {\n      setMessage('An unexpected error occurred.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n      <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n      <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} required />\n      {message && <p>{message}</p>}\n      <button type=\"submit\">Sign Up</button>\n    </form>\n  );\n};\n\nexport default Signup;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACQ,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACU,eAAe,CAAEC,kBAAkB,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAE1C,KAAM,CAAAc,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElBH,UAAU,CAAC,EAAE,CAAC,CAEd,GAAI,CAACP,KAAK,EAAI,CAACE,QAAQ,EAAI,CAACE,eAAe,CAAE,CAC3CG,UAAU,CAAC,0BAA0B,CAAC,CACtC,OACF,CAEA,GAAIL,QAAQ,GAAKE,eAAe,CAAE,CAChCG,UAAU,CAAC,yBAAyB,CAAC,CACrC,OACF,CAEA,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,aAAa,CAAE,CAC1CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEjB,KAAK,CAAEE,QAAQ,CAAEE,eAAgB,CAAC,CAC3D,CAAC,CAAC,CAEF,KAAM,CAAAc,MAAM,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAEpC,GAAIR,QAAQ,CAACS,EAAE,CAAE,CACfb,UAAU,CAAC,+BAA+B,CAAC,CAC7C,CAAC,IAAM,CACLA,UAAU,CAACW,MAAM,CAACZ,OAAO,EAAI,iBAAiB,CAAC,CACjD,CACF,CAAE,MAAOe,GAAG,CAAE,CACZd,UAAU,CAAC,+BAA+B,CAAC,CAC7C,CACF,CAAC,CAED,mBACET,KAAA,SAAMwB,QAAQ,CAAEd,YAAa,CAAAe,QAAA,eAC3B3B,IAAA,UAAO4B,IAAI,CAAC,OAAO,CAACC,KAAK,CAAEzB,KAAM,CAAC0B,QAAQ,CAAGjB,CAAC,EAAKR,QAAQ,CAACQ,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE,CAACG,QAAQ,MAAE,CAAC,cACxFhC,IAAA,UAAO4B,IAAI,CAAC,UAAU,CAACC,KAAK,CAAEvB,QAAS,CAACwB,QAAQ,CAAGjB,CAAC,EAAKN,WAAW,CAACM,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE,CAACG,QAAQ,MAAE,CAAC,cACjGhC,IAAA,UAAO4B,IAAI,CAAC,UAAU,CAACC,KAAK,CAAErB,eAAgB,CAACsB,QAAQ,CAAGjB,CAAC,EAAKJ,kBAAkB,CAACI,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE,CAACG,QAAQ,MAAE,CAAC,CAC9GtB,OAAO,eAAIV,IAAA,MAAA2B,QAAA,CAAIjB,OAAO,CAAI,CAAC,cAC5BV,IAAA,WAAQ4B,IAAI,CAAC,QAAQ,CAAAD,QAAA,CAAC,SAAO,CAAQ,CAAC,EAClC,CAAC,CAEX,CAAC,CAED,cAAe,CAAAxB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}