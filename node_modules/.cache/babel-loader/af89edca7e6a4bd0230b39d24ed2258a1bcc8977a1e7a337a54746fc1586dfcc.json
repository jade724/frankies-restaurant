{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Account=()=>{const[formData,setFormData]=useState({name:\"\",email:\"\",password:\"\",confirmPassword:\"\"});const[message,setMessage]=useState(\"\");const[successMessage,setSuccessMessage]=useState(\"\");useEffect(()=>{const fetchUserData=async()=>{try{const token=localStorage.getItem(\"token\");if(!token){setMessage(\"You must be logged in to access this page.\");return;}const response=await fetch(\"/api/account\",{headers:{Authorization:`Bearer ${token}`}});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||\"Failed to fetch account details.\");}const data=await response.json();// Set individual form fields\nsetFormData({...formData,name:data.name,email:data.email});}catch(error){console.error(\"Error fetching user data:\",error);setMessage(error.message);}};fetchUserData();},[]);const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const handleUpdate=async e=>{e.preventDefault();setMessage(\"\");setSuccessMessage(\"\");if(formData.password&&formData.password!==formData.confirmPassword){setMessage(\"Passwords do not match.\");return;}try{const token=localStorage.getItem(\"token\");if(!token)throw new Error(\"You must be logged in to update your account.\");// Hash the new password (you'll need to implement bcrypt.hash here)\nconst hashedPassword=await bcrypt.hash(formData.password,10);const response=await fetch(\"/api/account\",{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${token}`},body:JSON.stringify({...formData,password:hashedPassword// Send hashed password\n})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||\"Failed to update account.\");}setSuccessMessage(\"Account updated successfully!\");}catch(error){console.error(\"Update error:\",error);setMessage(error.message);}};const handleDelete=async()=>{try{const token=localStorage.getItem(\"token\");if(!token)throw new Error(\"You must be logged in to delete your account.\");const confirmed=window.confirm(\"Are you sure you want to delete your account? This action cannot be undone.\");if(!confirmed)return;const response=await fetch(\"/api/account\",{method:\"DELETE\",headers:{Authorization:`Bearer ${token}`}});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||\"Failed to delete account.\");}localStorage.removeItem(\"token\");window.location.href=\"/\";}catch(error){console.error(\"Delete error:\",error);setMessage(error.message);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"account-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"My Account\"}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:message}),successMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:successMessage}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleUpdate,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:formData.name,onChange:handleChange,placeholder:\"Name\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,placeholder:\"Email\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange,placeholder:\"New Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirmPassword\",value:formData.confirmPassword,onChange:handleChange,placeholder:\"Confirm New Password\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Update\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDelete,children:\"Delete Account\"})]});};export default Account;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Account","formData","setFormData","name","email","password","confirmPassword","message","setMessage","successMessage","setSuccessMessage","fetchUserData","token","localStorage","getItem","response","fetch","headers","Authorization","ok","errorData","json","Error","error","data","console","handleChange","e","target","value","handleUpdate","preventDefault","hashedPassword","bcrypt","hash","method","body","JSON","stringify","handleDelete","confirmed","window","confirm","removeItem","location","href","className","children","onSubmit","type","onChange","placeholder","required","onClick"],"sources":["/Users/jjom/Documents/frankies_restaurant/src/components/Account.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Account = () => {\n    const [formData, setFormData] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n    const [message, setMessage] = useState(\"\");\n    const [successMessage, setSuccessMessage] = useState(\"\");\n\n    useEffect(() => {\n        const fetchUserData = async () => {\n            try {\n                const token = localStorage.getItem(\"token\");\n                if (!token) {\n                    setMessage(\"You must be logged in to access this page.\");\n                    return;\n                }\n\n                const response = await fetch(\"/api/account\", {\n                    headers: {\n                        Authorization: `Bearer ${token}`,\n                    },\n                });\n\n                if (!response.ok) {\n                    const errorData = await response.json();\n                    throw new Error(\n                        errorData.error || \"Failed to fetch account details.\"\n                    );\n                }\n\n                const data = await response.json();\n\n                // Set individual form fields\n                setFormData({\n                    ...formData,\n                    name: data.name,\n                    email: data.email,\n                });\n            } catch (error) {\n                console.error(\"Error fetching user data:\", error);\n                setMessage(error.message);\n            }\n        };\n\n        fetchUserData();\n    }, []);\n\n    const handleChange = (e) => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const handleUpdate = async (e) => {\n        e.preventDefault();\n        setMessage(\"\");\n        setSuccessMessage(\"\");\n\n        if (formData.password && formData.password !== formData.confirmPassword) {\n            setMessage(\"Passwords do not match.\");\n            return;\n        }\n\n        try {\n            const token = localStorage.getItem(\"token\");\n            if (!token)\n                throw new Error(\n                    \"You must be logged in to update your account.\"\n                );\n\n            // Hash the new password (you'll need to implement bcrypt.hash here)\n            const hashedPassword = await bcrypt.hash(formData.password, 10);\n\n            const response = await fetch(\"/api/account\", {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify({\n                    ...formData,\n                    password: hashedPassword, // Send hashed password\n                }),\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || \"Failed to update account.\");\n            }\n\n            setSuccessMessage(\"Account updated successfully!\");\n        } catch (error) {\n            console.error(\"Update error:\", error);\n            setMessage(error.message);\n        }\n    };\n\n    const handleDelete = async () => {\n        try {\n            const token = localStorage.getItem(\"token\");\n            if (!token)\n                throw new Error(\n                    \"You must be logged in to delete your account.\"\n                );\n\n            const confirmed = window.confirm(\n                \"Are you sure you want to delete your account? This action cannot be undone.\"\n            );\n            if (!confirmed) return;\n\n            const response = await fetch(\"/api/account\", {\n                method: \"DELETE\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || \"Failed to delete account.\");\n            }\n\n            localStorage.removeItem(\"token\");\n            window.location.href = \"/\";\n        } catch (error) {\n            console.error(\"Delete error:\", error);\n            setMessage(error.message);\n        }\n    };\n\n    return (\n        <div className=\"account-page\">\n            <h1>My Account</h1>\n            {message && <p className=\"error-message\">{message}</p>}\n            {successMessage && (\n                <p className=\"success-message\">{successMessage}</p>\n            )}\n            <form onSubmit={handleUpdate}>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleChange}\n                    placeholder=\"Name\"\n                    required\n                />\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    placeholder=\"Email\"\n                    required\n                />\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                    placeholder=\"New Password\"\n                />\n                <input\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    value={formData.confirmPassword}\n                    onChange={handleChange}\n                    placeholder=\"Confirm New Password\"\n                />\n                <button type=\"submit\">Update</button>\n            </form>\n            <button onClick={handleDelete}>Delete Account</button>\n        </div>\n    );\n};\n\nexport default Account;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}